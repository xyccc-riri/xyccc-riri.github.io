<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xyccc&#39;Blog</title>
  
  
  <link href="https://xyccc.wiki/atom.xml" rel="self"/>
  
  <link href="https://xyccc.wiki/"/>
  <updated>2023-03-05T14:31:17.767Z</updated>
  <id>https://xyccc.wiki/</id>
  
  <author>
    <name>xyccc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构一</title>
    <link href="https://xyccc.wiki/posts/0.html"/>
    <id>https://xyccc.wiki/posts/0.html</id>
    <published>2023-03-01T12:05:47.000Z</published>
    <updated>2023-03-05T14:31:17.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性结构和非线性结构"><a href="#线性结构和非线性结构" class="headerlink" title="线性结构和非线性结构"></a>线性结构和非线性结构</h1><h2 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h2><p>1) 线性结构作为最常用的数据结构,其特点是数据<strong>元素之间存在一对一</strong>的线性关系</p><p>2) 线性结构有两种不同的存储结构,即<strong>顺序存储结构(数组)</strong>和<strong>链式存储结构(链表)</strong>。顺序存储的线性表称为顺序表，顺序表中的<strong>存储元素是连续的</strong></p><p>3) 链式存储的线性表称为链表，链表中的<strong>存储元素不一定是连续的</strong>，元素节点中存放数据元素以及相邻元素的地址信息</p><p>4) 线性结构常见的有<strong>:数组,队列,链表和栈</strong></p><h2 id="非线性结构"><a href="#非线性结构" class="headerlink" title="非线性结构"></a>非线性结构</h2><p>非线性结构包括：二维数组,多维数组,广义表,<strong>树结构,图结构</strong></p><h2 id="稀疏数组和队列"><a href="#稀疏数组和队列" class="headerlink" title="稀疏数组和队列"></a>稀疏数组和队列</h2><h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><p>分析问题:</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>因为该二维数组的很多值是默认值0.因此记录了<strong>很多没有意义的数据-&gt;稀疏数组</strong></p><p><img src="/img/sjjg/xxjg/1.png" alt="xjjg"></p>              </div>            </details><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>当一个数组大部分是0,或者为同一个值的数组时,可以使用稀疏数组来保存该数组。</p><p>稀疏数组的处理方法是:</p><p>1) 记录数组<strong>一共有几行几列,有多少个不同</strong>的值<br>2) 把具有不同值的元素的行列及值记录在一个小规模的数组中,从而<strong>缩小程序</strong>的规模</p><p>稀疏数组案例</p><p>左边的为原始的二维数组经过处理后变成右边的稀疏数组</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/xxjg/2.png" alt="xjjg"></p>              </div>            </details><p>应用实例</p><p>1.使用稀疏数组,来保留类似前面的二维数组(棋盘,地图)</p><p>2.把稀疏数组存盘,并且可以从新恢复原来的二维数数组</p><p>3.整体思路分析</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/xxjg/3.png" alt="xjjg"></p><p>二维数组转稀疏数组的思路(“()”为[])</p><p>1.遍历 原始的二维数组,得到有效数据的个数sum</p><p>2.根据sum就可以创建稀疏数组sparseArr int(sum +1)(3)</p><p>3.将二维数组的有效数据数据存入到稀疏数组</p><p>稀疏数组转原始的二维数组的思路<br>1.先读取稀疏数组的第一行,根据第一行的数据,创建原始的二维数组,比如上面的chessArr2 = int (11)(11)</p><p>2.在读取稀疏数组后几行的数据,并赋给原始的二维数组即可</p>              </div>            </details><p>4.代码实现</p><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">Java</button></li><li class="tab"><button type="button" data-href="#tab-2">C语言</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">spareArray</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个原始的二维数组 11*11</span></span><br><span class="line">        <span class="comment">//0:表示没有棋子 1:表示黑子 2:表示蓝子</span></span><br><span class="line">        <span class="type">int</span> chessArr1[][] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        chessArr1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        chessArr1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//输出原始的二维数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;原始的二维数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] row : chessArr1) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> data:row)&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将二维数组转稀疏数组</span></span><br><span class="line">        <span class="comment">//1.先遍历二维数组,得到非0数据个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; chessArr1.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.创建对应的稀疏数组</span></span><br><span class="line">        <span class="type">int</span> sparseArr[][] = <span class="keyword">new</span> <span class="title class_">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="comment">// 给稀疏数组赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历二维数组,将非0的值存放到稀疏数组中</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//用于记录第几个非0数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; chessArr1.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArr[count][<span class="number">0</span>]=i;</span><br><span class="line">                    sparseArr[count][<span class="number">1</span>]=j;</span><br><span class="line">                    sparseArr[count][<span class="number">2</span>]=chessArr1[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出稀疏数组的形式</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;得到的稀疏数组为:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d\t%d\t%d\t\n&quot;</span>,sparseArr[i][<span class="number">0</span>],sparseArr[i][<span class="number">1</span>],sparseArr[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//将稀疏数组恢复成原始二维数组</span></span><br><span class="line">        <span class="comment">//1.先读取稀疏数组的第一行,根据第一行的数据,创建原始的二维数组</span></span><br><span class="line">        <span class="type">int</span> chessArr2[][] = <span class="keyword">new</span> <span class="title class_">int</span>[sparseArr[<span class="number">0</span>][<span class="number">0</span>]][sparseArr[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//2.在读取稀疏数组后几行的数据,并赋给原始的二维数组即可</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">                chessArr2[sparseArr[i][<span class="number">0</span>]][sparseArr[i][<span class="number">1</span>]]=sparseArr[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组还原成原始数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] row : chessArr1) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> data:row)&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><h2 id="队列介绍"><a href="#队列介绍" class="headerlink" title="队列介绍"></a>队列介绍</h2><p>队列是一个<strong>有序列表</strong>,可以用数组或是<strong>链表</strong>来<strong>实现</strong></p><p>遵循<strong>先入后出</strong>的原则。即:<strong>先存入队列的数据,要先取出。后存入的要后取出</strong></p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/dl/1.png" alt="xjjg"></p>              </div>            </details><h3 id="数组模拟队列"><a href="#数组模拟队列" class="headerlink" title="数组模拟队列"></a>数组模拟队列</h3><p>队列本身是<strong>有序列表</strong>,若使用数组的结构来存储队列的数据,则队列数组的声明如下图,其中<strong>maxSize</strong>是该队列的最大容量。</p><p>因为队列的输出,输入是分别从前后端来处理,因此需要两个变量<strong>front及rear分别记录队列前后端</strong>的下标,front会<strong>随着数据输出而改变</strong>,而rear则是<strong>随着数据输入而改变</strong></p><p>当我们将数据存入队列时称为”addQueue”,addQueue的处理需要有两个步骤:</p><p>1.将尾指针往后移：rear+1,当front == rear[空]</p><p>2.若尾指针rear小于队列的最大下标maxSize-1,则将数据存入rear所指的数组元素中,否则无法存入数据。rear == maxSize -1 [队列满]</p><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">Java1</button></li><li class="tab"><button type="button" data-href="#tab-2">Java2</button></li><li class="tab"><button type="button" data-href="#tab-3">C语言</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.队列;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrQueue</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创捷一个队列</span></span><br><span class="line">        <span class="type">arryqueue</span> <span class="variable">arryqueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">arryqueue</span>(<span class="number">3</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&#x27; &#x27;</span>;<span class="comment">//接收用户输入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (loop)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;1.显示队列&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2.添加数据到队列&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;3.从队列取出数据&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;4.查看队列头数据&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;5.退出程序&quot;</span>);</span><br><span class="line">            key = sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (key)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    arryqueue.list();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;输入一个数字&quot;</span>);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                    arryqueue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> arryqueue.getQueue();</span><br><span class="line">                        System.out.printf(<span class="string">&quot;取出的数据是%d\n&quot;</span>,res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> arryqueue.headQueue();</span><br><span class="line">                        System.out.printf(<span class="string">&quot;队列头的数据是%d\n&quot;</span>,res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    sc.close();</span><br><span class="line">                    loop=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用数组模拟队列</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.队列;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">arrque</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">arryqueue</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxsize; <span class="comment">// 表示数组最大容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> front; <span class="comment">//队列头</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rear; <span class="comment">//队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] arr; <span class="comment">//该数组用于存放数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建队列构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">arryqueue</span><span class="params">(<span class="type">int</span> maxsizearr)</span>&#123;</span><br><span class="line">        maxsize = maxsizearr;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="title class_">int</span>[maxsize];</span><br><span class="line">        front = <span class="number">0</span>; <span class="comment">//指向队列头部</span></span><br><span class="line">        rear = <span class="number">0</span>; <span class="comment">// 指向队列尾部</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断队列是否满</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isfull</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == maxsize -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isempty</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加数据到队列</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addQueue</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="comment">//判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isfull())&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;队列满,不能加入&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rear++; <span class="comment">//让rear后移</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取队列数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getQueue</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            <span class="comment">//通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;队列空,不能取数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        front++; <span class="comment">//让front后移</span></span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列所有数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;队列空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;arr[%d]=%d\n&quot;</span>,i,arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列头数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">headQueue</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;队列空没有数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-3"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>问题:</p><p>1.目前数组使用一次就不能用,没有达到复用的效果</p><p>2.将这个数组使用算法,该进程一个环形的队形 取模: %</p><h3 id="数组模拟环形队列"><a href="#数组模拟环形队列" class="headerlink" title="数组模拟环形队列"></a>数组模拟环形队列</h3><p>思路如下:</p><p>1.front变量的含义做一个调整:front就指向队列的第一个元素,也就是说arr[front]就是队列的第一个元素,front的初始值=0</p><p>2.rear变量的含义做一个调制:rear指向队列的最后一个元素的后一个位置,因为i希望空出一个空间做为约定,rear的初始值=0</p><p>3.当队列满时,条件是(rear + 1)%maxSize = front[满]</p><p>4.队列为空的条件,rear == front[空]</p><p>5.队列中有效的数据的个数(rear + maxSize - front)%maxSize</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/dl/1.png" alt="xjjg"></p>              </div>            </details><p>修改后代码演示</p><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">Java1</button></li><li class="tab"><button type="button" data-href="#tab-2">Java2</button></li><li class="tab"><button type="button" data-href="#tab-3">C</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.队列;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">circlequeue</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">            <span class="comment">//创捷一个队列</span></span><br><span class="line">            <span class="type">circlearray</span> <span class="variable">circlearray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">circlearray</span>(<span class="number">5</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&#x27; &#x27;</span>;<span class="comment">//接收用户输入</span></span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">while</span> (loop)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;1.显示队列&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;2.添加数据到队列&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;3.从队列取出数据&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;4.查看队列头数据&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;5.退出程序&quot;</span>);</span><br><span class="line">                key = sc.nextInt();</span><br><span class="line">                <span class="keyword">switch</span> (key)&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        circlearray.list();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        System.out.println(<span class="string">&quot;输入一个数字&quot;</span>);</span><br><span class="line">                        <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                        circlearray.addQueue(value);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> circlearray.getQueue();</span><br><span class="line">                            System.out.printf(<span class="string">&quot;取出的数据是%d\n&quot;</span>,res);</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                            System.out.println(e.getMessage());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> circlearray.headQueue();</span><br><span class="line">                            System.out.printf(<span class="string">&quot;队列头的数据是%d\n&quot;</span>,res);</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                            System.out.println(e.getMessage());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        sc.close();</span><br><span class="line">                        loop=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;程序退出&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.队列;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">circlearrqueue</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">circlearray</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxsize; <span class="comment">// 表示数组最大容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> front; <span class="comment">//队列头</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rear; <span class="comment">//队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] arr; <span class="comment">//该数组用于存放数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建队列构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">circlearray</span><span class="params">(<span class="type">int</span> maxsizearr)</span>&#123;</span><br><span class="line">        maxsize = maxsizearr;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="title class_">int</span>[maxsize];</span><br><span class="line">        front = <span class="number">0</span>; <span class="comment">//指向队列头部</span></span><br><span class="line">        rear = <span class="number">0</span>; <span class="comment">// 指向队列尾部</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断队列是否满</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isfull</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ((rear + <span class="number">1</span>) % maxsize == front);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isempty</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加数据到队列</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addQueue</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isfull())&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;队列满,不能加入&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接将数据加入</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">        <span class="comment">//将rear后移,这里必须考虑取模</span></span><br><span class="line">        rear = (rear + <span class="number">1</span>) % maxsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取队列数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getQueue</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            <span class="comment">//通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;队列空,不能取数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.把front对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">//2.将front后移,考试取模</span></span><br><span class="line">        <span class="comment">//3.将临时保存的变量返回</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> arr[front];</span><br><span class="line">        front = (front+<span class="number">1</span>)%maxsize;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列所有数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;队列空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//从front开始遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> front; i &lt; front+size(); i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;arr[%d]=%d\n&quot;</span>, i % maxsize ,arr[i % maxsize]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求出当前队列有效数据的个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear + maxsize - front)%maxsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列头数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">headQueue</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (isempty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;队列空没有数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-3"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><p>链表是有序的列表,但是它在内存中是存储如下</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/lb/1.png" alt="xjjg"></p>              </div>            </details><p>1.链表是以节点的方式来存储,是<strong>链式存储</strong></p><p>2.每个节点包含data域用于存储数据,next域:指向下一个节点</p><p>3.如图:<strong>链表的各个节点不一定是连续存储</strong></p><p>4.链表分<strong>带头节点的链表</strong>和<strong>没有头节点的链表</strong>,根据实际的需求来确定</p><h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><p>单链表(带头结点)<strong>逻辑结构</strong>示意图如下</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p><img src="/img/sjjg/lb/2.png" alt="xjjg"></p>              </div>            </details><h3 id="单链表应用实例"><a href="#单链表应用实例" class="headerlink" title="单链表应用实例"></a>单链表应用实例</h3><p>按照顺序添加</p><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">java1</button></li><li class="tab"><button type="button" data-href="#-2">java2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.链表;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Linkedlist</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建几个节点</span></span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">hero1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HeroNode</span>(<span class="number">1</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;01&quot;</span>);</span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">hero2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HeroNode</span>(<span class="number">2</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;02&quot;</span>);</span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">hero3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HeroNode</span>(<span class="number">3</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;03&quot;</span>);</span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">hero4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HeroNode</span>(<span class="number">4</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;04&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建新链表</span></span><br><span class="line">        <span class="type">SingleLinkedList</span> <span class="variable">singleLinkedList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SingleLinkedList</span>();</span><br><span class="line">        <span class="comment">//加入</span></span><br><span class="line">        singleLinkedList.add(hero1);</span><br><span class="line">        singleLinkedList.add(hero3);</span><br><span class="line">        singleLinkedList.add(hero2);</span><br><span class="line">        singleLinkedList.add(hero4);</span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数据结构.链表;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LKlist</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义SingleLinkedList 来管理数据</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SingleLinkedList</span>&#123;</span><br><span class="line">    <span class="comment">//初始化一个头节点,头节点不动,不存放具体的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">HeroNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HeroNode</span>(<span class="number">0</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//添加节点到单向链表</span></span><br><span class="line">    <span class="comment">//当不考虑编号的顺序时</span></span><br><span class="line">    <span class="comment">//找到当前链表的最后节点</span></span><br><span class="line">    <span class="comment">//将最后这个节点的next域指向新的节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(HeroNode heroNode)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//因为head节点不能动,因此需要一个辅助变量</span></span><br><span class="line">        HeroNode temp= head;</span><br><span class="line">        <span class="comment">//遍历链表,找到最后</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//找到链表的最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有找到最后,就将temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时,temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//将最后这个节点的next域指向新的节点</span></span><br><span class="line">        temp.next = heroNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示链表[遍历]</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//先判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点不能动,因此我们需要一个辅助变量来遍历</span></span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">temp</span> <span class="operator">=</span> head.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//判断是否到链表最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出节点信息</span></span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            <span class="comment">//将next后移</span></span><br><span class="line">            temp=temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义heronode,每个heronode对象就是一个节点</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HeroNode</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> no;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String nickname;</span><br><span class="line">    <span class="keyword">public</span> HeroNode next; <span class="comment">//指向下一个节点</span></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HeroNode</span><span class="params">(<span class="type">int</span> no,String name,String nickname)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.no = no;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为了显示方便,重写toString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;HeroNode[no=&quot;</span>+no+<span class="string">&quot;,name=&quot;</span>+name+<span class="string">&quot;,nickname=&quot;</span>+nickname+<span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>自动排序添加和修改编号代码</p><details class="folding-tag" ><summary> 代码思路图 </summary>              <div class='content'>              <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">顺序添加</button></li><li class="tab"><button type="button" data-href="#-2">添加数据</button></li><li class="tab"><button type="button" data-href="#-3">删除数据</button></li><li class="tab"><button type="button" data-href="#-4">修改数据</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="/img/sjjg/lb/3.png" alt="xjjg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="/img/sjjg/lb/4.png" alt="xjjg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p><img src="/img/sjjg/lb/5.png" alt="xjjg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p>1.找到节点,通过遍历</p><p>2.temp.name = newHeroNode.name;</p><p>temp.nickname=newHeroNode.nickname;</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">自动排序+添加</button></li><li class="tab"><button type="button" data-href="#-2">修改编号</button></li><li class="tab"><button type="button" data-href="#-3">删除节点</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">addBy</span><span class="params">(HeroNode heroNode)</span>&#123;</span><br><span class="line">      <span class="comment">//因为头节点不能动,因此通过辅助变量来帮助找到添加的位置</span></span><br><span class="line">      <span class="comment">//因为单链表,因此我们找的temp是位于添加位置的前一个节点,否则加入不了</span></span><br><span class="line">      <span class="type">HeroNode</span> <span class="variable">temp</span> <span class="operator">=</span> head;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;<span class="comment">//标识添加的编号是否存在,默认为false</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (temp.next == <span class="literal">null</span>)&#123;<span class="comment">//说明temp已经在链表的最后</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (temp.next.no &gt; heroNode.no)&#123;<span class="comment">//位置找到,就在temp后边插入</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.next.no == heroNode.no) &#123;<span class="comment">//说明希望添加的编号已存在</span></span><br><span class="line">              flag =<span class="literal">true</span>; <span class="comment">//说明编号存在</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          temp = temp.next; <span class="comment">//后移,遍历当前的链表</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//判断flag的值</span></span><br><span class="line">      <span class="keyword">if</span> (flag)&#123; <span class="comment">//不能添加,说明编号存在</span></span><br><span class="line">          System.out.printf(<span class="string">&quot;准备输入的数据的编号%d已存在,不能插入\n&quot;</span>,heroNode.no);</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//插入到列表中,temp的后面</span></span><br><span class="line">          heroNode.next = temp.next;</span><br><span class="line">          temp.next = heroNode;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(HeroNode newHeroNode)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点,根据no编号</span></span><br><span class="line">        <span class="comment">//先定义一个辅助变量</span></span><br><span class="line">        <span class="type">HeroNode</span> <span class="variable">temp</span> <span class="operator">=</span> head.next;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;<span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.no == newHeroNode.no)&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据flag 判断是否找到要修改的节点</span></span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            temp.name = newHeroNode.name;</span><br><span class="line">            temp.nickname = newHeroNode.nickname;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;<span class="comment">//没有找到</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;没有找到编号%d的节点,不能修改\n&quot;</span>,newHeroNode.no);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除节点</span></span><br><span class="line">   <span class="comment">//思路</span></span><br><span class="line">   <span class="comment">// 1.head不能动,需要辅助节点找到待删除节点的前一个节点</span></span><br><span class="line">   <span class="comment">//2.在比较时,是temp.next.no和需要删除的节点的no比较</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">del</span><span class="params">(<span class="type">int</span> no)</span>&#123;</span><br><span class="line">       <span class="type">HeroNode</span> <span class="variable">temp</span> <span class="operator">=</span> head;</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;<span class="comment">//标志是否找到待删除节点</span></span><br><span class="line">       <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">           <span class="keyword">if</span> (temp.next == <span class="literal">null</span>)&#123;<span class="comment">//已经到链表的最后</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (temp.next.no == no)&#123;</span><br><span class="line">               <span class="comment">//找到了待删除节点的前一个节点temp</span></span><br><span class="line">               flag = <span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           temp = temp.next; <span class="comment">//temp后移,实现遍历</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//判断flag</span></span><br><span class="line">       <span class="keyword">if</span> (flag)&#123;<span class="comment">//说明找到</span></span><br><span class="line">           temp.next = temp.next.next;<span class="comment">//可以删除</span></span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.printf(<span class="string">&quot;要删除的%d节点不存在\n&quot;</span>,no);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;线性结构和非线性结构&quot;&gt;&lt;a href=&quot;#线性结构和非线性结构&quot; class=&quot;headerlink&quot; title=&quot;线性结构和非线性结构&quot;&gt;&lt;/a&gt;线性结构和非线性结构&lt;/h1&gt;&lt;h2 id=&quot;线性结构&quot;&gt;&lt;a href=&quot;#线性结构&quot; class=&quot;head</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xyccc.wiki/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://xyccc.wiki/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>导数</title>
    <link href="https://xyccc.wiki/posts/ae68.html"/>
    <id>https://xyccc.wiki/posts/ae68.html</id>
    <published>2022-12-22T13:05:47.000Z</published>
    <updated>2022-12-26T02:49:31.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导数的定义"><a href="#导数的定义" class="headerlink" title="导数的定义"></a>导数的定义</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导数的定义&quot;&gt;&lt;a href=&quot;#导数的定义&quot; class=&quot;headerlink&quot; title=&quot;导数的定义&quot;&gt;&lt;/a&gt;导数的定义&lt;/h1&gt;</summary>
      
    
    
    
    <category term="高数" scheme="https://xyccc.wiki/categories/%E9%AB%98%E6%95%B0/"/>
    
    
    <category term="高数笔记" scheme="https://xyccc.wiki/tags/%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>极限题目</title>
    <link href="https://xyccc.wiki/posts/5175.html"/>
    <id>https://xyccc.wiki/posts/5175.html</id>
    <published>2022-12-09T12:05:47.000Z</published>
    <updated>2022-12-24T03:40:01.917Z</updated>
    
    <content type="html"><![CDATA[<p>$例 1:  \lim \limits_{x \rightarrow 0} \frac{\sqrt{1+5 x}-\sqrt{1-3 x}}{x^{2}+2 x} $</p><p>$例 2: \lim \limits_{x \rightarrow 0}[1+\ln (1+x)]^{\frac{2}{x}} $<br>$例 3:  \lim \limits_{x \rightarrow 0}\left(x \sin \frac{1}{x}+\frac{1}{x} \sin x\right) $<br>$例 4:  \lim \limits_{x \rightarrow \infty}\left(1+\frac{2}{x}\right)^{-k x}=e^{-2} , 求  k  的值$<br>$例 5:  \lim \limits_{x \rightarrow \infty}\left(\frac{x+2 b}{x-b}\right)^{x}=8 , 求  \mathrm{b}  的值$</p><p>例6:$\lim\limits_{x\to∞}\frac{({x+6})^4(x^3+3)}{(2x+2)^3(x^2+1)^2}$</p><p>例7: $\lim \limits_{x \rightarrow 0} \frac{e^{\tan x}-e^{\sin x}}{x e^{x^{2}}-x} $<br>例8:$\lim \limits_{x \rightarrow 0} \frac{\sin ^{x} x-x^{x}}{1-e^{x^{3}}} $</p><p>例11:$f(x)=\left\{\begin{array}{ll}<br>\frac{\ln (1+x)}{x} &amp; x&gt;0 \\<br>e^{-x} &amp; x \leq 0<br>\end{array} \quad \text { 求 } \lim \limits _{x \rightarrow 0} f(x)\right.$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;$例 1:  \lim \limits_{x \rightarrow 0} \frac{\sqrt{1+5 x}-\sqrt{1-3 x}}{x^{2}+2 x} $&lt;/p&gt;
&lt;p&gt;$例 2: \lim \limits_{x \rightarrow 0}[1+\ln (1+</summary>
      
    
    
    
    <category term="高数" scheme="https://xyccc.wiki/categories/%E9%AB%98%E6%95%B0/"/>
    
    
    <category term="高数题目" scheme="https://xyccc.wiki/tags/%E9%AB%98%E6%95%B0%E9%A2%98%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>极限</title>
    <link href="https://xyccc.wiki/posts/2e2c.html"/>
    <id>https://xyccc.wiki/posts/2e2c.html</id>
    <published>2022-12-07T03:05:47.000Z</published>
    <updated>2022-12-24T03:40:00.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数极限的概念"><a href="#函数极限的概念" class="headerlink" title="函数极限的概念"></a>函数极限的概念</h1><h2 id="函数在某点的极限"><a href="#函数在某点的极限" class="headerlink" title="函数在某点的极限"></a>函数在某点的极限</h2><p>极限: $y=x+1$, x趋近于1,y趋近于2<br>例: $ \lim \limits_{x\to1}\frac{x-1}{x^2-1} $<br>$=\frac{x-1}{(x-1)(x+1)}=\frac{1}{x+1}=\frac{1}{2}$</p><h2 id="极限存在定理"><a href="#极限存在定理" class="headerlink" title="极限存在定理:"></a>极限存在定理:</h2><p>左极限=右极限 $\Rightarrow$ 极限存在,右≠左 $\Rightarrow$ 极限不存在<br>$\begin{cases}<br>  &amp;\text{}x\to 1^+:右极限= \lim \limits_ {x\to 1^+}(x+1)=2 \\<br>  &amp;\text{}x\to 1^-:左极限= \lim \limits_ {x\to 1^-}(x+1)=2<br>\end{cases}$</p><p>例1:$f(x)=\left\{\begin{array}{cc}<br>x+1 &amp; x&gt;0 \\<br>e^{x} &amp; x \leq 0<br>\end{array} \quad \text { 求 } \lim\limits_{x \rightarrow 0} f(x)\right.$</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>$\begin{array}{l}<br>\text {右}\lim\limits_{x \rightarrow 0^+} f(x)=\lim _{x \rightarrow 0^{+}} x+1=1 . \\<br>\text {左}\lim\limits_{x \rightarrow 0^-} f(x)=\lim _{x \rightarrow 0^{-}} e^{x}=1 \\<br>\Rightarrow \lim\limits_{x \rightarrow 0} f(x)=1<br>\end{array}$</p>              </div>            </details><h2 id="函数在无穷远处的极限"><a href="#函数在无穷远处的极限" class="headerlink" title="函数在无穷远处的极限"></a>函数在无穷远处的极限</h2><p>$x\Rightarrow ∞\begin{cases}<br>  &amp;\text{}x\to +∞ 右极限:\lim \limits_{x \to +∞}f(x)=A \\<br>  &amp;\text{}x\to -∞ 左极限:\lim \limits_{x \to -∞}f(x)=B<br>\end{cases}$<br>判断方式如定理一样 当A=B的时候 极限存在 A≠B时极限不存在<br>例: $\lim \limits_{x\to∞}arctanx$<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>右:$\lim\limits_{x\to+∞}arctanx=\frac{\pi}{2} $<br>左:$\lim\limits_{x\to-∞}arctanx=-\frac{\pi}{2} $</p>              </div>            </details></p><h2 id="极限的四则运算"><a href="#极限的四则运算" class="headerlink" title="极限的四则运算"></a>极限的四则运算</h2><p>$limf(x)=A,limg(x)=B$<br>$1.lim[f(x)+g(x)]=limf(x)+limg(x)=A+B$<br>$2.lim(f(x))(g(x))=limf(x)·limg(x)=AB$<br>$3.lim\frac{f(x)}{g(x)}=\frac{limf(x)}{limg(x)}=\frac{A}{B},B≠0$<br>$4.limfg(x)=klimf(x)=k·A$</p><h2 id="什么时候区分左右极限"><a href="#什么时候区分左右极限" class="headerlink" title="什么时候区分左右极限"></a>什么时候区分左右极限</h2><p>$1.e^x (x→∞)2.\frac{1}{x}(x→∞)3.arctanx(x→∞)$ 4.分段函数的分段点处5.绝对值函数<br><div class="tabs" id="例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#例-1">例1</button></li><li class="tab"><button type="button" data-href="#例-2">例2</button></li><li class="tab"><button type="button" data-href="#例-3">例3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="例-1"><p>$\lim\limits_{x\to∞}e^x\begin{cases}<br>  &amp;\text{右:}\lim\limits_{x\to+∞}e^x=+∞ \\<br>  &amp;\text{左:}\lim\limits_{x\to-∞}e^x=0<br>\end{cases}\Rightarrow \lim\limits_{x\to∞}e^x不存在$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例-2"><p>$\lim\limits_{x\to0}\frac{1}{x}\begin{cases}<br>  &amp;\text{右:}\lim\limits_{x\to0^+}\frac{1}{x}e^x=+∞ \\<br>  &amp;\text{左:}\lim\limits_{x\to0^-}\frac{1}{x}=-∞<br>\end{cases}\Rightarrow \lim\limits_{x\to0}\frac{1}{x}不存在$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例-3"><p>$函数f(x)=\begin{cases}<br>  &amp;\text{}x \quad  x&gt;0 \\<br>  &amp;\text{}cosx \quad x&lt;0<br>\end{cases}$<br>求 $\lim\limits_{x\to 0}f(x)$<br>$\lim\limits_{x\to0}\frac{1}{x}\begin{cases}<br>  &amp;\text{右:}\lim\limits_{x\to0^+}f(x)=\lim\limits_{x\to0^+}x=0 \\<br>  &amp;\text{左:}\lim\limits_{x\to0^-}f(x)=\lim\limits_{x\to0^+}cosx=1<br>\end{cases}\Rightarrow \lim\limits_{x\to0}f(x)不存在$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h1 id="无穷大与无穷小"><a href="#无穷大与无穷小" class="headerlink" title="无穷大与无穷小"></a>无穷大与无穷小</h1><p>定义:<br>无穷小:<br>$\lim\limits{x\to x0}f(x)=0,当x\to x0时,f(x)为无穷小$<br>$x\to 0 , x=0$<br>无穷大：<br>$\lim\limits{x \to x0}f(x)=∞,当x\to x0时,f(x)为无穷大$<br>$x\to +∞,x\to -∞$</p><h2 id="无穷大和无穷小的关系"><a href="#无穷大和无穷小的关系" class="headerlink" title="无穷大和无穷小的关系"></a>无穷大和无穷小的关系</h2><p>$1.\frac{1}{无穷大}=无穷小,2.\lim\limits_{x\to 0}\frac{1}{无穷小}=无穷大$</p><h3 id="无穷小的运算法则"><a href="#无穷小的运算法则" class="headerlink" title="无穷小的运算法则"></a>无穷小的运算法则</h3><p>$①有限个无穷小的和为无穷小②有限个无穷小的积为无穷小③有界量乘无穷小量为无穷小④\lim\limits_{x\to 0}x[-1,1]=0$<br>例 $\lim\limits_{x\to 0}xsinx\frac{1}{x}=0$</p><h3 id="无穷小的比较"><a href="#无穷小的比较" class="headerlink" title="无穷小的比较"></a>无穷小的比较</h3><p>当 $limα(x)=0,limβ(x)=0$ 时<br>若 $lim\frac{α(x)}{β(x)}=0,则称α(x)是比β(x)高阶的无穷小$<br>若 $lim\frac{α(x)}{β(x)}=∞,则称α(x)是比β(x)低阶的无穷小$<br>若 $lim\frac{α(x)}{β^{kx}}=C≠0,k&gt;0,则称α(x)与β(x)是k阶的无穷小$<br>若 $lim\frac{α(x)}{β(x)}=C(C≠0且C≠1),则称α(x)与β(x)是同阶的无穷小$<br>若 $lim\frac{α(x)}{β(x)}=1,则称α(x)与β(x)是等价的无穷小,记a(x)~β(x)$</p><h3 id="常见等价无穷小"><a href="#常见等价无穷小" class="headerlink" title="常见等价无穷小"></a>常见等价无穷小</h3><p>$1.x=sinx=arcsinx=tanx=arctanx$<br>$2.ln(1+x)=x,e^x-1=x,1-cos=\frac{1}{2}x^2$<br>$3.(1+ax)^b-1=abx(常见\sqrt{1+ax}-1=\frac{1}{2}ax)$<br>$4.a^x-1=xlna$<br><div class="tabs" id="例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#例-1">例1:</button></li><li class="tab"><button type="button" data-href="#例-2">例2:</button></li><li class="tab"><button type="button" data-href="#例-3">例3:</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="例-1"><p>例1:$\lim\limits_{x\to 0}\frac{sin4x}{tan2x}=\frac{4x}{2x}=2$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例-2"><p>例2:$\lim\limits_{x\to 0}\frac{ln(1+2x)}{e^x-1}\frac{2x}{x}=2$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例-3"><p>例3:$\lim\limits_{x\to 0}\frac{\frac{sinx}{cosx}-sinx}{x^3}$</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>=$\lim\limits_{x\to 0}\frac{sinx-sinx·cos}{x^3·cosx}$<br>=$\lim\limits_{x \to 0}\frac{sinx(1-cosx)}{x^3·cosx}$<br>=$\lim\limits_{x\to 0}\frac{x-\frac{1}{2}x^2}{x^3-cosx}$<br>=$\lim\limits_{x\to 0}\frac{\frac{1}{2}}{cosx}=\frac{1}{2}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h4 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h4><p>等价无穷小的等量代换只能用在乘除法中,不能用在加减法中<br>泰勒公式:<br>$loga^{(1+x)}=\frac{x}{lna}\quad x-sinx=\frac{1}{6}x^3\quad x-arcsinx=-\frac{1}{6}x^3$<br>$x-tanx=-\frac{1}{3}x^3 \quad x-arctanx=\frac{1}{3}x^3 \quad x-ln(1+x)=\frac{1}{2}x^2$<br>$e^x=1+x+\frac{1}{2}x^2+\frac{1}{6}x^3…(x^3)\quad (1+x)^a=1+ax+\frac{a(a-1)}{2}x^2+(x^2)$</p><h1 id="极限计算类型"><a href="#极限计算类型" class="headerlink" title="极限计算类型"></a>极限计算类型</h1><h2 id="frac-∞-∞-形-极限计算"><a href="#frac-∞-∞-形-极限计算" class="headerlink" title="$\frac{∞}{∞}形$极限计算"></a>$\frac{∞}{∞}形$极限计算</h2><p>解题方法:<br>$\begin{cases}<br>  &amp; \text{1.抓大头思想}\to  适用于小题\\<br>  &amp; \text{2.同除最高次} \to 适用于大题<br>  &amp; \text{3.洛必达法则}<br>\end{cases}$<br>例1:$\lim\limits_{x\to∞}\frac{x^3+x^2-1}{2x^3-x+2}$<br><div class="tabs" id="解"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#解-1">解</button></li><li class="tab"><button type="button" data-href="#解-2">解</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="解-1"><details class="folding-tag" ><summary> 抓大头 </summary>              <div class='content'>              <p>当X和分子分母趋近于无穷的时候,就可以使用抓大头思想,只看分子分母的最高次幂的系数。<br>例题解可得出: $\frac{x^3}{2x^3}=\frac{1}{2}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="解-2"><details class="folding-tag" ><summary> 同除最高次 </summary>              <div class='content'>              <p>同除最高次,找到方程内最高次幂进行整除<br>$\lim\limits_{x\to∞}\frac{x^3+x^2-1}{2x^3-x+2}$<br>$=\lim\limits_{x\to∞}\frac{\frac{x^3}{x^3}+\frac{x^2}{x^3}-\frac{1}{x^3}}{\frac{2x^3}{x^3}-\frac{x}{x^3}+\frac{2}{x^3}}$<br>$=\lim\limits_{x\to∞}\frac{1}{2}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><p>例2:<br>$\lim\limits_{x\to∞}\frac{3n^4+2n+1}{an^4+3n^2-4}=6$</p><div class="tabs" id="解"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#解-1">解</button></li><li class="tab"><button type="button" data-href="#解-2">解</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="解-1"><details class="folding-tag" ><summary> 抓大头 </summary>              <div class='content'>              <p>$分类讨论\begin{cases}<br>  &amp; \text{当} a=0 \\<br>  &amp; \text{当} a≠0<br>\end{cases}$<br>当 $a=0$ 时<br>$\lim\limits_{x\to∞}\frac{3n^4+2n+1}{+3n^2-4}$<br>$=\lim\limits_{x\to ∞}\frac{3n^4}{3n^2}=∞≠6,a=0不成立$<br>当 $a≠0 时$<br>$\lim\limits_{x\to∞}\frac{3n^4+2n+1}{+3n^2-4}$<br>$=\lim\limits_{x\to ∞}\frac{3n^4}{an^4}=\frac{3}{a}=6,a=\frac{1}{2}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="解-2"><details class="folding-tag" ><summary> 同除最高次 </summary>              <div class='content'>              <p>$\lim\limits_{x\to ∞}\frac{2+2\frac{1}{n^3}+\frac{1}{n^4}}{a<br>+3\frac{1}{n^2}-\frac{4}{n^4}}=\frac{3}{a}=6,a=\frac{1}{2}  $</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="0-0-形极限计算"><a href="#0-0-形极限计算" class="headerlink" title="$0^0$形极限计算"></a>$0^0$形极限计算</h2><p>方法:公式法:$u^v$$\begin{cases}<br>  &amp; \text{}0^0 ,u\to 0,v\to0 \\<br>  &amp; \text{}∞^0,u\to ∞,v\to ∞<br>\end{cases}$</p><p>$u^v=e^{v·lnu}$</p><p>例1:$\lim\limits_{x\to0}(e^x-1)^{tanx}$</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>$\lim\limits_{x\to0}(e^x-1)^{tanx}$</p><p>=$\lim\limits_{x\to0}e^{tanx·ln(e^x-1)}$($x\to0,tanx=x,ln(e^x-1)=lnx$)</p><p>=$\lim\limits_{x\to0}e^x·lnx$<a href="#0·∞">(0·∞)</a>简单因子下放</p><p>=$\lim\limits_{x\to0}e^{\frac{lnx}{\frac{1}{x}}}$用<a href="#lbd">洛必达法则</a>对分子分母进行求导</p><p>=$\lim\limits_{x\to0}e^{\frac{\frac{1}{x}}{-\frac{1}{x^2}}}</p><p>$=\lim\limits_{x\to0}e^{-x}=1$</p>              </div>            </details><h2 id="0·∞形-极限计算"><a href="#0·∞形-极限计算" class="headerlink" title="$0·∞形$极限计算"></a><span id ="0·∞">$0·∞形$极限计算</span></h2><p>0·∞计算思路:简单因子下放,转化为 $\frac{0}{0}和\frac{∞}{∞}$<br>$\begin{cases}<br>  &amp; \text{1.}\frac{∞}{\frac{1}{0}}(\frac{∞}{∞})\\<br>  &amp; \text{2.}\frac{0}{\frac{1}{∞}} (\frac{0}{0})<br>\end{cases}$<br>例1: $\lim\limits_{x\to∞}xsin\frac{\pi}{x}(∞·0形状)$<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$\lim\limits_{x\to∞}xsin\frac{\pi}{x},x为简单因子,下放得出\lim\limits_{x\to∞}\frac{sinx\frac{\pi}{x}}{\frac{1}{x}}x\to∞,\frac{\pi}{x}\to0$<br>$所以等价sinx=x得出\lim\limits_{x\to∞}\frac{\frac{\pi}{x}}{\frac{1}{x}}=\pi$</p>              </div>            </details></p><h2 id="∞-∞形-极限计算"><a href="#∞-∞形-极限计算" class="headerlink" title="$∞-∞形$极限计算"></a>$∞-∞形$极限计算</h2><p>解题方法:<br>$\begin{cases}<br>  &amp; \text{1.}有分母就同分 \\<br>  &amp; \text{2.}无分母有理化<br>\end{cases}$</p><p>例1:$\lim\limits_{x\to∞}\sqrt{x^2+x}-\sqrt{x^2-x}$</p><div class="tabs" id="解"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#解-1">解</button></li><li class="tab"><button type="button" data-href="#解-2">解</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="解-1"><details class="folding-tag" ><summary> 解1 </summary>              <div class='content'>              <p>$\lim\limits_{x\to∞}\sqrt{x^2+x}-\sqrt{x^2-x}$<br>$=\lim\limits_{x\to∞}\frac{(\sqrt{x^2+x}-\sqrt{x^2-x})(\sqrt{x^2+2}+\sqrt{x^2-x})}{\sqrt{x^2+x}+\sqrt{x^2-x}}$<br>$=\lim\limits_{x\to∞}\frac{2x}{\sqrt{x^2+x}+\sqrt{x^2-x}},式子变成\frac{∞}{∞}形,用抓大头的思想得出$<br>$=\lim\limits_{x\to∞}\frac{2x}{2x}=1$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="解-2"><details class="folding-tag" ><summary> 解2 </summary>              <div class='content'>              <p>运用倒代换的思想令<br>$x=\frac{1}{t},t=\frac{1}{x},x\to∞ t\to∞$<br>$\lim\limits_{t\to0}\sqrt{\frac{1}{t^2}+\frac{1}{t}}-\sqrt{\frac{1}{t^2}-\frac{1}{t}}$<br>$=\lim\limits_{t\to0}{\sqrt{\frac{1+t}{t^2}}-\sqrt{\frac{1-t}{t^2}}}$<br>$=\lim\limits_{t\to0}\frac{\sqrt{1+t}-\sqrt{1-t}}{t}$<br>$=\lim\limits_{t\to0}\frac{(\sqrt{1+t}-\sqrt{1-t})(\sqrt{1+t}+\sqrt{1-t})}{t(\sqrt{1+t}+\sqrt{1-t})}$<br>$=\lim\limits_{t\to0}\frac{2t}{2t}=1$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-∞形-极限计算"><a href="#1-∞形-极限计算" class="headerlink" title="$1^∞形$极限计算"></a>$1^∞形$极限计算</h2><p>解题方法:<br>$\begin{cases}<br>  &amp; \text{1.}第二重要极限 \\<br>  &amp; \text{2.}公式法 \\<br>  &amp; \text{} 1^∞;u^v(u\to1,v\to∞) \\<br>  &amp; \text{} \lim\limits_{x\to·}u^v=\lim\limits_{x\to·}e^{(u-1)·v}(前提是必须满足1^∞形)<br>\end{cases}$<br>第二重要极限:<br>$\begin{cases}<br>  &amp; \text{} \lim\limits_{\Box \to 0}(1+\Box )^{\frac{1}{\Box }} =e \\<br>  &amp; \text{} \lim\limits_{\Box \to ∞}(1+\Box )^\Box  =e<br>\end{cases}$<br>公式法例题:$\lim\limits_{x\to∞}(\frac{x+1}{x-1})^x;u=\frac{x+1}{x-1},v=x$<br>$=\lim\limits_{x\to∞}e^{\frac{2x}{x-1}}=e^2$</p><p>例1:$\lim\limits_{x\to0}(1-x)^{\frac{1}{x}}$</p><div class="tabs" id="解"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#解-1">解</button></li><li class="tab"><button type="button" data-href="#解-2">解</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="解-1"><details class="folding-tag" ><summary> 公式法 </summary>              <div class='content'>              <p>$\lim\limits_{x\to0}(1-x)^{\frac{1}{x},u=1-x,v=\frac{1}{x}}$<br>$=\lim\limits_{x\to0}e^{(u-1)·v}$<br>$=\lim\limits_{x\to0}e^{-x·\frac{1}{x}}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="解-2"><details class="folding-tag" ><summary> 第二重要极限 </summary>              <div class='content'>              <p>za<br>$\lim\limits_{x\to0}(1-x)^{\frac{1}{x}}$<br>$=\lim\limits_{x\to0}[1+(-x)]^\frac{1}{x}$<br>$=\lim\limits_{x\to0}[1+(-x)]^{\frac{1}{-x}·(-x)·\frac{1}{x}}$<br>$=\lim\limits_{x\to0}e^{-x·\frac{1}{x}}=e^{-1}$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="两个重要极限"><a href="#两个重要极限" class="headerlink" title="两个重要极限"></a>两个重要极限</h1><p>(1)第一重要极限:</p><p>$\lim\limits_{x\to0}\frac{sinx}{x}=1$</p><p>(2)第二重要极限:</p><p>形式一: $ \lim\limits_{x\to 0}(1+x)^{\frac{1}{x}}=e ;$<br>形式二:  $\lim\limits_{x \to \infty}\left(1+\frac{1}{x}\right)^{x}=e $</p><h2 id="极限计算总结"><a href="#极限计算总结" class="headerlink" title="极限计算总结:"></a>极限计算总结:</h2><p>七种未定式:</p><p>$\frac{0}{0}\begin{cases}<br>  &amp; \text{ 1.} 恒等变形   \\<br>  &amp; \text{ 2.} 等价  \\<br>  &amp; \text{ 3.} 洛必达<br>\end{cases}$ $\frac{∞}{∞}\begin{cases}<br>  &amp; \text{1.} 恒等变形   \\<br>  &amp; \text{2.}  \begin{cases}<br>  &amp; \text{1.} 恒等变形(小题)   \\<br>  &amp; \text{2.} 同除最高次(大题)<br>\end{cases}  \\<br>  &amp; \text{3.}洛必达<br>\end{cases}$</p><p>$0·∞$ 方法:简单因子下放 </p><p>$\begin{cases}<br>  &amp; \text{0·∞(0为简单因子)} \to\frac{∞}{\frac{1}{0}}\to \frac{∞}{∞}     \\<br>  &amp; \text{0·∞(∞为简单因子)}  \to \frac{0}{\frac{1}{∞}}\to \frac{0}{0}<br>\end{cases} $</p><p>$∞-∞$:方法</p><p>$\begin{cases}<br>  &amp; \text{1.}有分母\to通分 \\ \<br>  &amp; \text{2.}无分母\to有理化<br>\end{cases}  \to \frac{∞}{∞} $</p><p> $1^∞$:$\begin{cases}<br>  &amp; \text{1.}公式法:1^∞;u^v(u\to1,v\to∞)\\ \<br>  &amp; \text{2.}第二重要极限<br>\end{cases}$</p><p>$0^0,∞^0$:公式法:$u^v=e^{v·lnu}$</p><h1 id="夹逼定理"><a href="#夹逼定理" class="headerlink" title="夹逼定理"></a>夹逼定理</h1><p>定义:$g(x)≤f(x)≤h(x)$,若对其同时取极限,满足$\lim \limits_{x \rightarrow \cdot} g(x) \leq \lim \limits_{x \rightarrow \cdot} f(x) \leq \lim \limits_{x \rightarrow \cdot} h(x)$ </p><p>$\lim \limits_{x \rightarrow \cdot} g(x)=A,\lim \limits_{x \rightarrow \cdot} h(x)=A$ ,那么就可以得出$\lim \limits_{x \rightarrow \cdot} f(x)=A$</p><p>例1:$\lim \limits_{n \rightarrow \infty}\left(\frac{1}{\sqrt{n^{2}+1}}+\frac{1}{\sqrt{n^{2}+2}}+\cdots+\frac{1}{\sqrt{n^{2}+n}}\right)$(常见不等式)</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>方法：将次要部分进行改变</p><p>令$\left(\frac{1}{\sqrt{n^{2}+1}}+\frac{1}{\sqrt{n^{2}+2}}+\cdots+\frac{1}{\sqrt{n^{2}+n}}\right)=f(x)$</p><p>$g(x)=\frac{1}{\sqrt{n^{2}+n}}+\frac{1}{\sqrt{n^{2}+n}}+\cdots+\frac{1}{\sqrt{n^{2}+n}}=\frac{n}{\sqrt{n^{2}+n}}$除了最后的分式其他全部变小,所以g(x)&lt;f(x)</p><p>$h(x)=\frac{1}{\sqrt{n^{2}+1}}+\frac{1}{\sqrt{n^{2}+1}}+\cdots \frac{1}{\sqrt{n^{2}+1}}=\frac{n}{\sqrt{n^{2}+1}}$n个$\frac{1}{\sqrt{n^2+1}}$相加,大于f(x)</p><p>$\lim\limits_{n\to∞}\frac{n}{\sqrt{n^2+n}}$和$\lim\limits_{n\to∞}\frac{n}{\sqrt{n^2+1}}$抓大头得出等于1;</p><p>$\lim \limits_{n \rightarrow \infty} g(x) \leq \lim \limits_{n \rightarrow \infty} f(x) \leq \lim \limits_{n \rightarrow \infty} h(x)$已知g(x)和h(x)等于1,所以f(x)=1</p>              </div>            </details><h1 id="连续"><a href="#连续" class="headerlink" title="连续"></a>连续</h1><p>定义:当极限存在,左极限和右极限等于函数值的时候,就说是连续的</p><p>例:$\lim\limits _{x \to 0^+}f(x)=1,\lim\limits{x\to0^-}=1,f(0)=1$函数是连续的</p><p>例 1:$f(x)=\left\{\begin{array}{ll}<br>\frac{\ln (1+x)}{x} &amp; x&gt;0 \\<br>e^{-x} &amp; x \leq 0<br>\end{array}\right.$$f(x)$在$x=0$处是否连续?</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>1.右:$\lim \limits_{x \rightarrow 0^{+}} f(x)=\lim _{x \rightarrow 0^{+}} x+1=1 $</p><p>2.左:$\lim\limits_{x \rightarrow 0^{-}} f(x)=\lim _{x \rightarrow 0^{-}} e^{x}=1$</p><p>函数值:$\lim\limits_{x\to0}f(x)=1$</p><p>左右极限相等且等于函数值,当x=0,f(x)是连续的</p>              </div>            </details><h1 id="间断"><a href="#间断" class="headerlink" title="间断"></a>间断</h1><p>一.$\begin{cases}<br>  &amp; \text{1.} 右极限≠左极限\to 跳跃间断点\\<br>  &amp; \text{2.} 右极限=左极限≠函数值 \to 可去间断点\\<br>\end{cases}$</p><p>二.$\begin{cases}<br>  &amp; \text{1.} 右极限或左极限其一为∞\to 无穷间断点\\<br>  &amp; \text{2.} 右极限和左极限震荡 \to 震荡间断点\\<br>\end{cases}$</p><p>方法:</p><p>1.寻找可疑点$\begin{cases}<br>  &amp; \text{1.} 无定义点(分母=0的时候,一定是间断的)\\<br>  &amp; \text{2.} 分段函数分段点\\<br>\end{cases}$ </p><p>2.计算左右极限和函数值在于定义进行判断</p><p>例1: 讨论函数 $ f(x)=\frac{x^{2}-1}{x^{2}-x-2}$的间断类型</p><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>1.寻找可疑点,当x=0的时候,分母为无定义点$x^2-x-2=0$</p><p>运用因式分解$(x-2)(x+1)=0$得出$x=2$和$x=-1$两个点</p><p>当x=2的时候 右:$\lim\limits_{x\to2+}\frac{x^2-1}{x^2-x-2}=\lim\limits_{x\to2+}\frac{(x-1)(x+1)}{(x-2)(x+1)}=\lim\limits_{x\to2+}\frac{x-1}{x-2}=∞(分子=1，分母趋近于∞)f(x)$为无穷间断点</p><p>当x=-1的时候 右:$\lim\limits_{x\to-1^+}\frac{x^2-1}{x^2-x-2}=\lim\limits_{x\to-1^+}\frac{x-1}{x-2}=\frac{2}{3}$左:$\lim\limits_{x\to-1^-}\frac{x^2-1}{x^2-x-2}=\lim\limits_{x\to-1^-}\frac{x-1}{x-2}=\frac{2}{3}$</p><p>函数值$f(-1)不存在$,右极限=左极限≠函数 为可去间断点</p><p>得出$\begin{cases}<br>  &amp; \text{} x=2 无穷间断点\\<br>  &amp; \text{} x=-1 可去间断点<br>\end{cases}$</p>              </div>            </details><h1 id="洛必达法则"><a href="#洛必达法则" class="headerlink" title="洛必达法则"></a><span id="lbd">洛必达法则</span></h1><p>当 $lim\frac{f(x)}{g(x)}满足$ “$\frac{0}{0}$” 形和”$\frac{∞}{∞}$”形时<br>$lim\frac{f(x)}{g(x)}=lim\frac{f(x)’}{g(x)’},如果1阶导之后还是等于\frac{0}{0}或\frac{∞}{∞}时,继续求二阶导\frac{f(x)’’}{g(x)’’}以此类推$<br>注:1.分子,分母分别求导2.能等价先等价,不能再洛<br>例1:$\lim\limits_{x\to0}xlnx$<br><details class="folding-tag" ><summary>  </summary>              <div class='content'>              <p>$\lim\limits_{x\to0}xlnx|ln’x=\frac{1}{x},\frac{1}{x}’=-\frac{1}{x^2}$<br>$=\lim\limits_{x\to0}\frac{\frac{1}{x}}{-\frac{1}{x^2}}$<br>$=\lim\limits_{x\to0}-x=0$</p>              </div>            </details></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数极限的概念&quot;&gt;&lt;a href=&quot;#函数极限的概念&quot; class=&quot;headerlink&quot; title=&quot;函数极限的概念&quot;&gt;&lt;/a&gt;函数极限的概念&lt;/h1&gt;&lt;h2 id=&quot;函数在某点的极限&quot;&gt;&lt;a href=&quot;#函数在某点的极限&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="高数" scheme="https://xyccc.wiki/categories/%E9%AB%98%E6%95%B0/"/>
    
    
    <category term="高数笔记" scheme="https://xyccc.wiki/tags/%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="https://xyccc.wiki/posts/b7a3.html"/>
    <id>https://xyccc.wiki/posts/b7a3.html</id>
    <published>2022-12-04T13:05:47.000Z</published>
    <updated>2022-12-24T03:39:58.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>x(自变量),f(法则),y(因变量)<br>x的范围称作<strong>定义域</strong>,y的范围称作<strong>值域</strong></p><h2 id="函数的基本性质"><a href="#函数的基本性质" class="headerlink" title="函数的基本性质"></a>函数的基本性质</h2><ol><li>有界性<br>函数$f(x)$的定义域内,恒有$m≤f(x)≤M$,则称函数$f(x)$在该域内为有界函数</li><li>单调性<br>单调递增$f(x)$随着$x$的增加而增加<br>单调递减$f(x)$随着$x$的增加而减小</li><li>周期性<br>若$f(x) = f(x+t)$,则称$f(x)$为周期函数,$f(x)$的周期为t<br>常见:$f(x) = sinx,f(x) = cosx,$ T = 2$\pi$,$f(x) = |sinx|,f(x) = |cosx| ,f(x) = tanx$ T = $\pi$</li><li>奇偶性<br>定义:当函数$f(x)$的定义域关于原点对称时<br>奇函数:$f(-x) = -f(x)$,图形关于原点对称<br>偶函数:$f(-x) = f(x)$,圆形关于y轴对称<br><img src="/img/gs/hs/hs1.jpg" alt="hs"><br>常见奇函数<br>-$sinx,arcsinx,tanx,cotx,x^{(奇数)}$<br>常见偶函数<br>-$cosx,|x|,x^{(偶数)}$<br>判断下列函数的奇偶性<br>例题:<br>例1: $f(x) = x^3+2x$<details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$f(-x)= -x^3 + -2x = -f(x) 函数为奇函数$</p>              </div>            </details>例2: $f(x) =xsinxe^{cosx}$<details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$f(-x) =-xsin(-x)e^{cos(-x)}$<br>$=-x(-sinx)·e^{cosx}$<br>$=x·sinx·e^{cosx} = f(x) 函数为偶函数$</p>              </div>            </details>例3: $f(x) = x(x^2-1)(x^3-1)$<details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$ f(-x) = -x[-(x^2)-1)][(-x)^3-1)]$<br>$ =-x(x^2-1)(-x^3-1)$<br>$ =-x(x^2-1)[-(x^3+1)]$<br>$ =x(x^2-1)(x^3+1) ≠f(x),-f(x) 函数为非奇非偶函数$</p>              </div>            </details><h2 id="基本初等函数"><a href="#基本初等函数" class="headerlink" title="基本初等函数"></a>基本初等函数</h2>幂函数 $y=x^a$(a为实数)<details class="folding-tag" ><summary> 幂函数 </summary>              <div class='content'>              <p>1.$y=x,x,y \in R$ 奇函数<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs2.jpg" style="height:100px;"/></div>&lt;/div&gt;<br>2.$y=x^{(-1)}=\frac{1}{x},x≠0,y \in R$ 奇函数<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs2.jpg" style="height:100px;"/></div>&lt;/div&gt;<br>3.$y=x^2,x \in R,y&gt;=0 偶函数$<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs3.png" style="height:100px;"/></div>&lt;/div&gt;<br>4.$y=\frac{1}{2}=\sqrt{x},x,y&gt;=0$<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs4.png" style="height:100px;"/></div>&lt;/div&gt;<br>5.$y=x^3,x,y\in R$<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs5.png" style="height:100px;"/></div>&lt;/div&gt;</p>              </div>            </details><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><details class="folding-tag" ><summary> 四则 </summary>              <div class='content'>              <ol><li>$a^n·a^m \quad=\quad a{(n+m)}$ </li><li>$a^n÷a^m \quad=\quad \frac{a^n}{a^m}$ </li><li>$(a^n)^m \quad=\quad a^{(n·m)}$ </li><li>$(\frac{b}{a}^n) \quad=\quad \frac{b^n}{a^n}$ </li><li>$a^{(-n)} \quad=\quad \frac{1}{a^n}$ </li><li>$a^{-\frac{1}{n}} \quad=\quad \sqrt[n]{a}$</li></ol>              </div>            </details><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2></li><li>正弦 $y = sinx , x\in R,y\in[-1,1]奇函数$</li><li>余弦 $y = cosx , x\in R,y\in[-1,1]偶函数$<div class="img-wrap"><div class="img-bg"><img class="img" src="\img\gs\hs\hs6.png"/></div></div></li><li>正切 $y = tanx = \frac{sinx}{cosx}$<h3 id="三角函数等价关系"><a href="#三角函数等价关系" class="headerlink" title="三角函数等价关系"></a>三角函数等价关系</h3></li><li>$y = sinx ⇆ y = cscx = \frac{1}{sinx}$</li><li>$y = cosx ⇆ y = secx = \frac{1}{cosx}$</li><li>$y = tanx = \frac{sinx}{cosx} ⇆ y = cotx = \frac{1}{tanx} = \frac{cosx}{sinx}$<h3 id="三角函数基本公式"><a href="#三角函数基本公式" class="headerlink" title="三角函数基本公式"></a>三角函数基本公式</h3>$1.sin^2a+cos^a = 1$ $2.tan^2a+1 = sec^2x$ $3.cot^2x+1=csc^2x$<h3 id="二倍角公式"><a href="#二倍角公式" class="headerlink" title="二倍角公式"></a>二倍角公式</h3>$sin2a = 2sina·cosa, cos^2x=cos^2x-sin^2x cos2a=1-sin^2x cos2a = 2cos^2x-1$<h3 id="两角和与差"><a href="#两角和与差" class="headerlink" title="两角和与差"></a>两角和与差</h3>$sin(α+β) = sinαcosβ+cosαsinβ$ $sin(α-β) = sinαcosβ-cosαsinβ$<h3 id="反三角函数"><a href="#反三角函数" class="headerlink" title="反三角函数"></a>反三角函数</h3>$D: -1≤x≤-1$ $1.y=sinx ⇆ y=arcsinx 2.y=cosx⇆y=arccosx 3. y=tanx⇆y=arctanx$<h2 id="常函数"><a href="#常函数" class="headerlink" title="常函数"></a>常函数</h2>$y = C$<div class="img-wrap"><div class="img-bg"><img class="img" src="/img/gs/hs/hs7.png"/></div></div><h3 id="复合函数"><a href="#复合函数" class="headerlink" title="复合函数"></a>复合函数</h3>定义:有多个函数复合组成<br>$y=f(u) , u=g(x) → y=f[g(x)] 例:y =ln(x+1),y=lnu,u=x+1$<h3 id="基本初等函数-1"><a href="#基本初等函数-1" class="headerlink" title="基本初等函数"></a>基本初等函数</h3>定义: 由基本初等函数与常数经过有限次的四则运算法则或符合构成<br>例: $y=sinx+x^2,y=ln(sinx),y=sinx+x^2+ln(xins)$<br>应用:求函数表达式<br>例1: $f(x+1) = x^2+2x,求f(x)$<div class="tabs" id="解"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#解-1">解法一</button></li><li class="tab"><button type="button" data-href="#解-2">解法二</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="解-1"><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$t=x+1,x=t-1,f(t)=(t-1)^2+2(t-1) = t^2-2t+1+2t-2=t^2-1,得出f(x)=x^1$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="解-2"><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$f(x+1) = x^2+2x+1-1=(x+1)^2-1=f(x)=x^2-1$</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="函数定义域"><a href="#函数定义域" class="headerlink" title="函数定义域"></a>函数定义域</h3>$y = \frac{1}{x},x≠0|y=\sqrt[偶]{x},x≥0|y=\sqrt[奇]{x},x\in R$<br>$y=loga^x,y=lnx,x&gt;0$<br>$y=arcsinx,arccosx,1≤x≤1$<br>$y =tanx, D:x≠k\pi+\frac{\pi}{2},k \in Z$<br>$y =cotx,D: x≠k\pi,k \in Z$<br>求函数定义域<br>例1. $y=ln(4-x^2)-\sqrt{x^2}{-1}$<details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$<br>\begin{cases}<br>  &amp; \text{} 4-x^2 \Rightarrow 4 &gt;x^2 \Rightarrow -2&lt;x&lt;2  \\<br>  &amp; \text{} x^2-1 \Rightarrow x^2≥ 1 \Rightarrow x≥1,x≤1<br>\end{cases}<br>$</p>              </div>            </details></li></ol><p>例2.$y=\frac{ln(x-1)}{\sqrt{2-x}}$<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$<br>\begin{cases}<br>  &amp; \text{} \sqrt{2-x} ≠ 0 \Rightarrow 2-x ≠0 \Rightarrow x≠2  \\<br>  &amp; \text{} x-1&gt;0 \Rightarrow x &gt; 1<br>\end{cases}<br>$</p>              </div>            </details></p><h4 id="抽象形函数"><a href="#抽象形函数" class="headerlink" title="抽象形函数"></a>抽象形函数</h4><p>例1: 已知函数$f(x)$的定义域为(-1,1),求函数$f(2x-1)$的定义域<br>注:同一函数的括号的范围是相同的<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$-1&lt;x&lt;1 \Rightarrow -1&lt;()&lt;1 \Rightarrow -1&lt;2x-1&lt;1 \Rightarrow 0&lt;x&lt;1$</p>              </div>            </details><br>例2:$f(1-3x)$的定义域为(-3,3],求$f(x)$的定义域<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <div class="img-wrap"><div class="img-bg"><img class="img" src="/img/gs/hs/hs8.png"/></div></div>              </div>            </details></p><h3 id="反函数"><a href="#反函数" class="headerlink" title="反函数"></a>反函数</h3><p>定义:反函数和原函数的x和y是相反的<br>$y=f(x),y=f^-1(x)$<br>$求反函数 1.x=y-1$ $2.x,y互换$<br>例1:求 $y=ln(x+1)的反函数$<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$e=lnx=x,e^y=e^{ln(x+1)}=x+1$<br>$e^y=x+1,x=e^y-1 $</p>              </div>            </details><br>例2:求 $y=lnx+\sqrt{1+x^2}$ 的反函数<br><details class="folding-tag" ><summary> 解 </summary>              <div class='content'>              <p>$e^y=e^{ln(x+\sqrt{1+x^2})}$<br>$e^y=x+\sqrt{1+x^2}$<br>$e^y-x=\sqrt{1+x^2}$<br>$(e^y-x)^2=1+x^2$<br>$e^{2y}-2xe^y+x^2=1+x^2$<br>$e^{2y}-2xe^y=1$<br>$e^{2y}-1=2xe^y$<br>$x=\frac{e^{2y}-1}{2e^x}$</p>              </div>            </details></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;h2 id=&quot;函数的定义&quot;&gt;&lt;a href=&quot;#函数的定义&quot; class=&quot;headerlink&quot; title=&quot;函数的定义&quot;&gt;&lt;/a&gt;函数的定</summary>
      
    
    
    
    <category term="高数" scheme="https://xyccc.wiki/categories/%E9%AB%98%E6%95%B0/"/>
    
    
    <category term="高数笔记" scheme="https://xyccc.wiki/tags/%E9%AB%98%E6%95%B0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ciscoDHCP+NAT配置</title>
    <link href="https://xyccc.wiki/posts/76e3.html"/>
    <id>https://xyccc.wiki/posts/76e3.html</id>
    <published>2022-11-29T06:47:20.000Z</published>
    <updated>2022-12-24T03:40:04.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是NAT？"><a href="#什么是NAT？" class="headerlink" title="什么是NAT？"></a>什么是NAT？</h1><h2 id="NAT的由来"><a href="#NAT的由来" class="headerlink" title="NAT的由来"></a>NAT的由来</h2><p>IPv4地址只有32位,最多只有42.9亿个地址,去掉保留地址,组播地址,能用的地址只有30多亿左右,在当下数以万计的主机,IPV4的数量是是完全不够用的,虽然后面有了IPV6，但是当下IPV4还是主流,于是就诞生了NAT(Network Address Translation)网络地址转换</p><h2 id="NAT的定义"><a href="#NAT的定义" class="headerlink" title="NAT的定义"></a>NAT的定义</h2><p>NAT是将私有IP地址通过边界路由转换成外网IP地址，在边界路由的NAT地址转换表记录下这个转换映射记录，当外部数据返回时，路由使用NAT技术查询NAT转换表，再将目标地址替换成内网用户IP地址。</p><h1 id="使用cisco实现NAT-简易模型"><a href="#使用cisco实现NAT-简易模型" class="headerlink" title="使用cisco实现NAT(简易模型)"></a>使用cisco实现NAT(简易模型)</h1><p><img src="/img/cisco/tpt.png" alt="拓扑图"><br>上图为简单的拓扑图用于演示<br>如上图配置好各个IP的接口<br>然后为PC机配置DHCP,打开内网路由器R1<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en //进入特权模式</span><br><span class="line">Router#conf t //进入配置</span><br><span class="line">Router(config)#hostname R1 将Router重命名为R1</span><br><span class="line">R1(config)#int f0/0 配置f0/0接口,此接口是链接PC机的</span><br><span class="line">R1(config-if)#ip address 192.168.10.1 255.255.255.0 //配置接口IP</span><br><span class="line">R1(config-if)#no sh //激活接口</span><br><span class="line">R0(config)#ip dhcp pool DHCP //配置 DHCP 的地址池名字：DHCP</span><br><span class="line">R0(dhcp-config)#network 192.168.10.0 255.255.255.0 //地址池的网络</span><br><span class="line">R0(dhcp-config)#default-router 192.168.10.1 //分配IP地址的网关</span><br><span class="line">R0(dhcp-config)#dns-server 192.168.1.254 //分配IP地址DNS,最后一位为范围最大是254</span><br></pre></td></tr></table></figure><br>使PC机自动获取IP<br><img src="/img/cisco/PC1.png" alt="PC"><img src="/img/cisco/PC2.png" alt="PC"></p><h2 id="配置NAT"><a href="#配置NAT" class="headerlink" title="配置NAT"></a>配置NAT</h2><p>第一步:<br>定义内外网,告诉设备什么口链接外网,什么口链接内网(链接PC的口是内网,链接R2的口是外网)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#int s0/3/0 //外网接口</span><br><span class="line">R1(config-if)#ip nat outside //告诉设备这是外网接口</span><br><span class="line">R1(config-if)#ex</span><br><span class="line">R1(config)#int f0/0 //内网接口</span><br><span class="line">R1(config-if)#ip nat inside  //告诉设备这是内网接口</span><br></pre></td></tr></table></figure><br>第二步:<br>内网的什么数据需要上网？<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#access-list 1 permit 192.168.10.0 0.0.0.255</span><br></pre></td></tr></table></figure><br>第三步:<br>配置NAT,进行私有IP地址转化为共有IP地址<br>R1(config)#ip nat inside source list 1 interface s/0/3/0 overload<br>第四步:<br>访问公网资源<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#ip route 0.0.0.0 0.0.0.0 202.101.1.2(最后这个IP为下一站地址)</span><br><span class="line">也可以这样写,将下一站地址改为接口</span><br><span class="line">R1(config)#ip route 0.0.0.0 0.0.0.0 s0/3/0</span><br></pre></td></tr></table></figure><br>配置完毕测试家用机是否能连接到服务器<br><img src="/img/cisco/PC3.png" alt="PC"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是NAT？&quot;&gt;&lt;a href=&quot;#什么是NAT？&quot; class=&quot;headerlink&quot; title=&quot;什么是NAT？&quot;&gt;&lt;/a&gt;什么是NAT？&lt;/h1&gt;&lt;h2 id=&quot;NAT的由来&quot;&gt;&lt;a href=&quot;#NAT的由来&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="cisco" scheme="https://xyccc.wiki/categories/cisco/"/>
    
    
    <category term="cisco" scheme="https://xyccc.wiki/tags/cisco/"/>
    
  </entry>
  
  <entry>
    <title>文章写法笔记</title>
    <link href="https://xyccc.wiki/posts/aa7d.html"/>
    <id>https://xyccc.wiki/posts/aa7d.html</id>
    <published>2022-11-26T13:05:47.000Z</published>
    <updated>2022-12-24T03:40:05.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><p>Markdown的标题等级是看”#”的个数来判断的<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Heading level 1 </span><br><span class="line">## Heading level 2</span><br></pre></td></tr></table></figure></p><h1 id="代码块围栏"><a href="#代码块围栏" class="headerlink" title="代码块围栏"></a>代码块围栏</h1><p>在代码块的前后使用三个反引号“```”或者三个波浪号“~~~”<br><img src="/img/markdown/wldmk.png" alt="Markdown围栏代码块" title="Markdown围栏代码块"></p><h2 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h2><p>使用此功能，您可以为编写代码的任何语言添加颜色突出显示。要添加语法突出显示，请在受防护的代码块之前的反引号旁边指定一种语言。<br><img src="/img/markdown/gl.png" alt="Markdown高亮" title="Markdown高亮"><br>效果如下<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Smith&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><h1 id="Markdown段落语法"><a href="#Markdown段落语法" class="headerlink" title="Markdown段落语法"></a>Markdown段落语法</h1><p>Markdown要创建段落，请使用空白行将一行或多行文本进行分隔<br><img src="/img/markdown/paragraph.png" alt="Markdown段落语法" title="Markdown段落"><br>段落（Paragraph）用法的最佳实<br>不要用空格（spaces）或制表符（ tabs）缩进段落。</p><h2 id="Markdown换行语法"><a href="#Markdown换行语法" class="headerlink" title="Markdown换行语法"></a>Markdown换行语法</h2><p>在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行。<br><img src="/img/markdown/linebreak.png" alt="Markdown段落语法" title="Markdown段落"></p><h1 id="Markdown强调语法-字体形式"><a href="#Markdown强调语法-字体形式" class="headerlink" title="Markdown强调语法(字体形式)"></a>Markdown强调语法(字体形式)</h1><h2 id="Markdown粗体"><a href="#Markdown粗体" class="headerlink" title="Markdown粗体"></a>Markdown粗体</h2><p>粗体,在单词或短语的前后各添加两个星号或下划线<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**bold text**,__bold text__</span><br></pre></td></tr></table></figure><br><strong>这是粗体</strong></p><h2 id="Markdown斜体"><a href="#Markdown斜体" class="headerlink" title="Markdown斜体"></a>Markdown斜体</h2><p>斜体,在单词或短语前后加一个星号或下划线<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*bold text*,_bold text_</span><br></pre></td></tr></table></figure><br><em>这是斜体</em></p><h2 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h2><p>同时使用要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***bold text***,___bold text___,</span><br></pre></td></tr></table></figure><br><strong><em>斜体加粗体</em></strong></p><h2 id="Markdown删除线"><a href="#Markdown删除线" class="headerlink" title="Markdown删除线"></a>Markdown删除线</h2><p>若要删除单词，请在单词前后使用两个波浪号<del>。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哈哈哈,~~我被删了！~~</span><br></pre></td></tr></table></figure><br>输出结果如下<br>哈哈哈,</del>我被删了!~~</p><h1 id="Markdown引用语法"><a href="#Markdown引用语法" class="headerlink" title="Markdown引用语法"></a>Markdown引用语法</h1><p>要创建块引用，请在段落前添加一个 “&gt;” 符号。<br><img src="/img/markdown/yy1.png" alt="Markdown引用" title="Markdown引用"></p><h2 id="多个段落的块引用"><a href="#多个段落的块引用" class="headerlink" title="多个段落的块引用"></a>多个段落的块引用</h2><p>块引用可以包含多个段落。为段落之间的空白行添加一个 “&gt;” 符号。<br><img src="/img/markdown/yy2.png" alt="Markdown引用" title="Markdown引用"></p><h2 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h2><p>块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号。<br><img src="/img/markdown/yy3.png" alt="Markdown引用" title="Markdown引用"></p><h2 id="带有其他元素的块引用"><a href="#带有其他元素的块引用" class="headerlink" title="带有其他元素的块引用"></a>带有其他元素的块引用</h2><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效<br><img src="/img/markdown/yy4.png" alt="Markdown引用" title="Markdown引用"></p><h1 id="Markdown列表语法"><a href="#Markdown列表语法" class="headerlink" title="Markdown列表语法"></a>Markdown列表语法</h1><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。<br><img src="/img/markdown/lb.png" alt="Markdown列表" title="Markdown列表"></p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。<br><img src="/img/markdown/wxlb.png" alt="Markdown无序列表" title="Markdown无序列表"></p><h2 id="任务列表语法"><a href="#任务列表语法" class="headerlink" title="任务列表语法"></a>任务列表语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [√] 吃饭了吗</span><br><span class="line">- [×] 睡了没</span><br></pre></td></tr></table></figure><p>效果如下</p><ul><li>[√] 吃饭了吗</li><li>[×] 睡了没</li></ul><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">First</span><br><span class="line">: 吃饱了睡</span><br><span class="line">Second</span><br><span class="line">:不是🐖是什么</span><br></pre></td></tr></table></figure><p>效果如下<br>First<br>: 吃饱了睡<br>Second<br>:不是🐖是什么</p><h2 id="在列表中嵌套其他元素"><a href="#在列表中嵌套其他元素" class="headerlink" title="在列表中嵌套其他元素"></a>在列表中嵌套其他元素</h2><p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示</p><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p><img src="/img/markdown/qtdl.png" alt="Markdown列表嵌套段落" title="Markdown列表嵌套段落"></p><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><p><img src="/img/markdown/qtyyk.png" alt="Markdown列表嵌套引用块" title="Markdown列表嵌套引用块"></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>代码块通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。<br><img src="/img/markdown/qtdmk.png" alt="Markdown列表嵌套段落" title="Markdown列表嵌套段落"></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="/img/markdown/qttp.png" alt="Markdown列表嵌套段落" title="Markdown列表嵌套段落"></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p><img src="/img/markdown/qtlb.png" alt="Markdown序嵌套段落" title="Markdown序嵌套段落"></p><h1 id="Markdown代码语法"><a href="#Markdown代码语法" class="headerlink" title="Markdown代码语法"></a>Markdown代码语法</h1><h2 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h2><p>要将单词或短语表示为代码,请将其包裹在反引号中”`”中<br><img src="/img/markdown/dmyf1.png" alt="Markdown代码语法" title="Markdown代码语法"></p><h2 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h2><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号”``”中。<br><img src="/img/markdown/zyfyh.png" alt="Markdown转义反引号" title="Markdown转义反引号"></p><h2 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h2><p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。<br><img src="/img/markdown/dmk.png" alt="Markdown代码块" title="Markdown代码块"><br>Note: 要创建不用缩进的代码块，请使用<a href="https://markdown.com.cn/extended-syntax/fenced-code-blocks.html">围栏式代码块(fenced code blocks)</a></p><h1 id="Markdown分割线语法"><a href="#Markdown分割线语法" class="headerlink" title="Markdown分割线语法"></a>Markdown分割线语法</h1><p>要创建分隔线，请在单独一行上使用三个或多个星号 (<em>*</em>)、破折号 (—-) 或下划线 (___) ，并且不能包含其他内容。</p><h1 id="Markdown链接语法"><a href="#Markdown链接语法" class="headerlink" title="Markdown链接语法"></a>Markdown链接语法</h1><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：<a href="超链接地址 超链接title">超链接显示名</a><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接 [内容](url)</span><br></pre></td></tr></table></figure><br>这是一个链接<a href="https://www.xyccc.wiki/">回到主页面</a>。</p><h2 id="给链接添加title"><a href="#给链接添加title" class="headerlink" title="给链接添加title"></a>给链接添加title</h2><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接[内容](url &quot;鼠标悬停显示的内容&quot;)</span><br></pre></td></tr></table></figure><br>这是一个链接<a href="https://www.xyccc.wiki/" title="啊啊啊啊">回到主页面</a>。</p><h2 id="网址和email地址"><a href="#网址和email地址" class="headerlink" title="网址和email地址"></a>网址和email地址</h2><p>用”&lt;&gt;”可以很方便地把url或者Email地址变成可点击的链接<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;url&gt;,&lt;Email&gt;</span><br></pre></td></tr></table></figure><br><a href="https://www.xyccc.wiki/">https://www.xyccc.wiki/</a><br><a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#49;&#x33;&#x37;&#x38;&#x33;&#49;&#x30;&#55;&#50;&#x36;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;">&#49;&#x33;&#x37;&#x38;&#x33;&#49;&#x30;&#55;&#50;&#x36;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;</a></p><h2 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h2><p>强调 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。<br><img src="/img/markdown/gshlj.png" alt="Markdown链接语法" title="Markdown链接语法"></p><h2 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h2><p>引用样式链接是一种特殊的链接它使URL在Markdown中更易于显示和阅读。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[名称][url]</span><br></pre></td></tr></table></figure><br>效果如下</p><h1 id="Markdown-图片语法"><a href="#Markdown-图片语法" class="headerlink" title="Markdown 图片语法"></a>Markdown 图片语法</h1><h2 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h2><p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。<br>插入图片Markdown语法代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片链接 &quot;图片title&quot;)。</span><br></pre></td></tr></table></figure><br>效果如下<br><img src="/img/markdown/testimg.png" alt="这是图片" title="哈哈！"></p><h2 id="带链接的图片"><a href="#带链接的图片" class="headerlink" title="带链接的图片"></a>带链接的图片</h2><p>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。<br>图片插入链接语法代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[![图片](/img/ &quot;Shiprock&quot;)](https://markdown.com.cn)</span><br></pre></td></tr></table></figure><br>效果如下<br><a href="https://xyccc.wiki"><img src="/img/markdown/testimg.png" alt="这是图片" title="哈哈！"></a></p><h1 id="Markdown表格"><a href="#Markdown表格" class="headerlink" title="Markdown表格"></a>Markdown表格</h1><p>要添加表，请使用三个或多个连字符（—-）创建每列的标题，并使用管道（|）分隔每列,单元格宽度可以变化,呈现的输出看起来相同。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| AAA         | BBB         |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure><br>效果如下<br>| AAA         | BBB         |<br>| —————- | —————- |<br>| Header      | Title       |<br>| Paragraph   | Text        |</p><h2 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h2><p>可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号”:”，将列中的文本对齐到左侧，右侧或中心。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure><br>效果如下<br>| Syntax      | Description | Test Text     |<br>| :—-        |    :——:   |          —-: |<br>| Header      | Title       | Here’s this   |<br>| Paragraph   | Text        | And more      |</p><h1 id="Markdown转义字符语法"><a href="#Markdown转义字符语法" class="headerlink" title="Markdown转义字符语法"></a>Markdown转义字符语法</h1><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符”\”<br><img src="img/markdown/zyzf.png" alt="转义字符" title="转义字符"></p><h2 id="可做转义的字符"><a href="#可做转义的字符" class="headerlink" title="可做转义的字符"></a>可做转义的字符</h2><p>以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\,`,*,-,&#123;&#125;,[],(),#,+,-,.,!,| </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure><br>** 正常显示星号 **</p><h2 id="Markdown脚注"><a href="#Markdown脚注" class="headerlink" title="Markdown脚注"></a>Markdown脚注</h2><p>脚注可以添加注释和参考,而不会使文档正文混乱,创建脚注时,带有脚注的上标数字会出现在添加脚注参考的位置,可以单击链接跳至页面底部的脚注内容<br>注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</p><h2 id="特殊字符自动转义"><a href="#特殊字符自动转义" class="headerlink" title="特殊字符自动转义"></a>特殊字符自动转义</h2><p>…内容不好简化直接丢原链接了<a href="https://markdown.com.cn/basic-syntax/escaping-characters.html">特殊字符自动转义</a></p><h1 id="Markdown内嵌HTML标签"><a href="#Markdown内嵌HTML标签" class="headerlink" title="Markdown内嵌HTML标签"></a>Markdown内嵌HTML标签</h1><p><a href="https://markdown.com.cn/basic-syntax/htmls.html">内嵌Html标签</a></p><h1 id="Tag-Plugins-Plus"><a href="#Tag-Plugins-Plus" class="headerlink" title="Tag Plugins Plus"></a>Tag Plugins Plus</h1><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><div class="tabs" id="效果演示"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#效果演示-1">演示效果</button></li><li class="tab"><button type="button" data-href="#效果演示-2">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="效果演示-1"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>Ctrl</kbd> + <kbd>V</kbd></li><li>密码样式的文本：<psw>噜噜噜噜</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="效果演示-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line">5. 键盘样式的文本 &#123;% kbd Ctrl %&#125; + &#123;% kbd V %&#125;</span><br><span class="line">6. 密码样式的文本：&#123;% psw 噜噜噜噜 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#span-1">演示效果</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab"><button type="button" data-href="#span-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="span-1"><ul><li>彩色文字<br><span class='p red'>红</span><span class='p green'>绿</span><span class='p blue'>蓝</span></li><li>大号字体<br><span class='p ultra'>哈哈哈</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ol><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br><span class="line">演示源码:</span><br><span class="line">&#123;% span red,红%&#125;&#123;% span green,绿%&#125;&#123;% span blue,蓝%&#125;</span><br><span class="line">&#123;%span ultra,哈哈哈%&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="段落文本p-配置参数跟span相同"><a href="#段落文本p-配置参数跟span相同" class="headerlink" title="段落文本p(配置参数跟span相同)"></a>段落文本p(配置参数跟span相同)</h2><div class="tabs" id="效果演示"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#效果演示-1">效果演示</button></li><li class="tab"><button type="button" data-href="#效果演示-2">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="效果演示-1"><p class='p red'>红色</p> 在两个代码之间插入内容 <p class='p green'>绿色</p> <span class='p yellow'>代码内可以嵌入别的代码</span> <p class='p blue'>蓝色</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="效果演示-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br><span class="line">源码演示:</span><br><span class="line">&#123;%p red , 红色 %&#125; 在两个代码之间插入内容 &#123;%p green , 绿色 %&#125; &#123;%span yellow, 代码内可以嵌入别的代码 %&#125; &#123;%p blue , 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h2><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tip-1">效果演示</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab"><button type="button" data-href="#tip-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tip-1"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。<a href="https://fontawesome.com/">https://fontawesome.com/</a></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br><span class="line">源码：</span><br><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#checkbox-1">效果演示</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab"><button type="button" data-href="#checkbox-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="checkbox-1"><div class='checkbox'><input type="checkbox" />            <p>文本测试</p>            </div><div class='checkbox'><input type="checkbox" />            <p>checked 选中状态文本</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的<a href="https://markdown.com.cn/">markdown</a></p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>带选中+颜色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br><span class="line">演示原码：</span><br><span class="line">&#123;%checkbox 文本测试%&#125;</span><br><span class="line">&#123;%checkbox checked 选中状态文本%&#125;</span><br><span class="line">&#123;%checkbox checked ,支持简单的[markdown](https://markdown.com.cn/)%&#125;</span><br><span class="line">&#123;%checkbox blue checked ,带选中+颜色%&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接卡片link"><a href="#链接卡片link" class="headerlink" title="链接卡片link"></a>链接卡片link</h2><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#link-1">效果演示</button></li><li class="tab"><button type="button" data-href="#link-2">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="link-1"><div class="tag link"><a class="link-card" title="回到我的博客" href="https://www.xyccc.wiki/"><div class="left"><img src="/img/bg/head.jpg"/></div><div class="right"><p class="text">回到我的博客</p><p class="url">https://www.xyccc.wiki/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br><span class="line">源码：</span><br><span class="line">&#123;% link 回到我的博客, https://www.xyccc.wiki/ , /img/bg/head.jpg %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h2><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inlineimage-1">效果演示</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">配置参数</button></li><li class="tab"><button type="button" data-href="#inlineimage-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inlineimage-1"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:20px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><ol><li>高度:height = ()px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br><span class="line">源码：</span><br><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif , height=20px%&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h2><div class="tabs" id="image"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#image-1">效果演示</button></li><li class="tab"><button type="button" data-href="#image-2">配置参数</button></li><li class="tab"><button type="button" data-href="#image-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="image-1"><ol><li>添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="啊啊啊啊啊啊啊啊。"/></div><span class="image-caption">啊啊啊啊啊啊啊啊。</span></div></li><li>指定宽度：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div></li><li>指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="啊啊啊啊啊啊啊啊。" style="width:400px;"/></div><span class="image-caption">啊啊啊啊啊啊啊啊。</span></div></li><li>设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br><span class="line">源码:</span><br><span class="line">1. 添加描述：</span><br><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=啊啊啊啊啊啊啊啊。 %&#125;</span><br><span class="line">2. 指定宽度：</span><br><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br><span class="line">3. 指定宽度并添加描述：</span><br><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=啊啊啊啊啊啊啊啊。 %&#125;</span><br><span class="line">4. 设置占位背景色：</span><br><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="折叠框folding"><a href="#折叠框folding" class="headerlink" title="折叠框folding"></a>折叠框folding</h2><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#folding-1">效果演示</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab"><button type="button" data-href="#folding-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="folding-1"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">源码：</span><br><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line">- haha</span><br><span class="line">- hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha &lt;span&gt;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27; style=&#x27;height:24px&#x27;&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">显示效果</button></li><li class="tab"><button type="button" data-href="#tab-2">配置参数</button></li><li class="tab"><button type="button" data-href="#tab-3">源码演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Unique name :</span><br><span class="line">选项卡块标签的唯一名称，不带逗号。</span><br><span class="line">将在#id中用作每个标签及其索引号的前缀。</span><br><span class="line">如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</span><br><span class="line">仅当前帖子/页面的URL必须是唯一的！</span><br><span class="line">[<span class="symbol">index</span>]:</span><br><span class="line"><span class="link">活动选项卡的索引号。</span></span><br><span class="line">如果未指定，将选择第一个标签（1）。</span><br><span class="line">如果index为-1，则不会选择任何选项卡。</span><br><span class="line">可选参数。</span><br><span class="line">[<span class="symbol">Tab caption</span>]:</span><br><span class="line"><span class="link">当前选项卡的标题。</span></span><br><span class="line">如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</span><br><span class="line">如果未指定标题，但指定了图标，则标题将为空。</span><br><span class="line">可选参数。</span><br><span class="line">[<span class="symbol">@icon</span>]:</span><br><span class="line"><span class="link">FontAwesome图标名称（全名，看起来像“ fas fa-font”）</span></span><br><span class="line">可以指定带空格或不带空格；</span><br><span class="line">例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</span><br><span class="line">可选参数。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs tab%&#125;</span><br><span class="line">&lt;!-- tab 显示效果--&gt;</span><br><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tip "><p>笔记内容参考店长的文章,只选取了自己需要的内容</p></div><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一级标题&quot;&gt;&lt;/a&gt;这是一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="文章美化" scheme="https://xyccc.wiki/categories/%E6%96%87%E7%AB%A0%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="博客美化" scheme="https://xyccc.wiki/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
</feed>
